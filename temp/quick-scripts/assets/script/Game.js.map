{"version":3,"sources":["Game.js"],"names":["cc","Class","extends","Component","properties","starPrefab","default","type","Prefab","maxStarDuration","minStarDuration","ground","Node","player","scoreDisplay","Label","scoreAudio","AudioClip","spawnNewStar","newStar","instantiate","node","addChild","setPosition","getNewStarPosition","getComponent","game","starDuration","Math","random","timer","randX","randY","groundY","jumpHeight","maxX","width","v2","gainScore","score","string","audioEngine","playEffect","gameOver","stopAllActions","director","loadScene","onLoad","y","height","start","update","dt"],"mappings":";;;;;;AAAAA,GAAGC,KAAH,CAAS;AACLC,aAASF,GAAGG,SADP;;AAGLC,gBAAY;AACR;AACAC,oBAAY;AACRC,qBAAS,IADD;AAERC,kBAAMP,GAAGQ;AAFD,SAFJ;AAMR;AACAC,yBAAiB,CAPT;AAQRC,yBAAiB,CART;AASR;AACAC,gBAAQ;AACJL,qBAAS,IADL;AAEJC,kBAAMP,GAAGY;AAFL,SAVA;AAcR;AACAC,gBAAQ;AACJP,qBAAS,IADL;AAEJC,kBAAMP,GAAGY;AAFL,SAfA;AAmBRE,sBAAc;AACVR,qBAAS,IADC;AAEVC,kBAAMP,GAAGe;AAFC,SAnBN;AAuBRC,oBAAY;AACRV,qBAAS,IADD;AAERC,kBAAMP,GAAGiB;AAFD;AAvBJ,KAHP;;AAgCLC,kBAAc,wBAAW;AACrB;AACA,YAAIC,UAAUnB,GAAGoB,WAAH,CAAe,KAAKf,UAApB,CAAd;AACA;AACA,aAAKgB,IAAL,CAAUC,QAAV,CAAmBH,OAAnB;AACA;AACAA,gBAAQI,WAAR,CAAoB,KAAKC,kBAAL,EAApB;AACA;AACAL,gBAAQM,YAAR,CAAqB,MAArB,EAA6BC,IAA7B,GAAoC,IAApC;AACA,aAAKC,YAAL,GAAoB,KAAKjB,eAAL,GAAuBkB,KAAKC,MAAL,MAAiB,KAAKpB,eAAL,GAAuB,KAAKC,eAA7C,CAA3C;AACA,aAAKoB,KAAL,GAAa,CAAb;AACH,KA3CI;;AA6CLN,wBAAoB,8BAAY;AAC5B,YAAIO,QAAQ,CAAZ;AACA;AACA,YAAIC,QAAQ,KAAKC,OAAL,GAAeL,KAAKC,MAAL,KAAgB,KAAKhB,MAAL,CAAYY,YAAZ,CAAyB,QAAzB,EAAmCS,UAAlE,GAA+E,EAA3F;AACA;AACA,YAAIC,OAAO,KAAKd,IAAL,CAAUe,KAAV,GAAgB,CAA3B;AACAL,gBAAQ,CAACH,KAAKC,MAAL,KAAgB,GAAjB,IAAwB,CAAxB,GAA4BM,IAApC;AACA;AACA,eAAOnC,GAAGqC,EAAH,CAAMN,KAAN,EAAaC,KAAb,CAAP;AACH,KAtDI;AAuDLM,eAAW,qBAAY;AACnB,aAAKC,KAAL,IAAc,CAAd;AACA;AACA,aAAKzB,YAAL,CAAkB0B,MAAlB,GAA2B,YAAY,KAAKD,KAA5C;AACA;AACAvC,WAAGyC,WAAH,CAAeC,UAAf,CAA0B,KAAK1B,UAA/B,EAA2C,KAA3C;AACH,KA7DI;AA8DL2B,cAAU,oBAAY;AAClB,aAAK9B,MAAL,CAAY+B,cAAZ,GADkB,CACY;AAC9B5C,WAAG6C,QAAH,CAAYC,SAAZ,CAAsB,MAAtB;AACH,KAjEI;;AAmEL;;AAEAC,YAAQ,kBAAY;AAChB;AACA,aAAKd,OAAL,GAAe,KAAKtB,MAAL,CAAYqC,CAAZ,GAAgB,KAAKrC,MAAL,CAAYsC,MAAZ,GAAmB,CAAlD;AACA;AACA,aAAKnB,KAAL,GAAa,CAAb;AACA,aAAKH,YAAL,GAAoB,CAApB;AACA;AACA,aAAKT,YAAL;AACA;AACA,aAAKqB,KAAL,GAAW,CAAX;AACH,KA/EI;;AAiFLW,SAjFK,mBAiFI,CAER,CAnFI;AAqFLC,UArFK,kBAqFGC,EArFH,EAqFO;AACR;AACA;AACA,YAAI,KAAKtB,KAAL,GAAa,KAAKH,YAAtB,EAAoC;AAChC,iBAAKgB,QAAL;AACA;AACH;AACD,aAAKb,KAAL,IAAcsB,EAAd;AACH;AA7FI,CAAT","file":"Game.js","sourceRoot":"..\\..\\..\\..\\assets\\script","sourcesContent":["cc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        // 这个属性引用了星星预制资源\r\n        starPrefab: {\r\n            default: null,\r\n            type: cc.Prefab\r\n        },\r\n        // 星星产生后消失时间的随机范围\r\n        maxStarDuration: 0,\r\n        minStarDuration: 0,\r\n        // 地面节点，用于确定星星生成的高度\r\n        ground: {\r\n            default: null,\r\n            type: cc.Node\r\n        },\r\n        // player 节点，用于获取主角弹跳的高度，和控制主角行动开关\r\n        player: {\r\n            default: null,\r\n            type: cc.Node\r\n        },\r\n        scoreDisplay: {\r\n            default: null,\r\n            type: cc.Label\r\n        },\r\n        scoreAudio: {\r\n            default: null,\r\n            type: cc.AudioClip\r\n        }\r\n    },\r\n\r\n    spawnNewStar: function() {\r\n        // 使用给定的模板在场景中生成一个新节点\r\n        var newStar = cc.instantiate(this.starPrefab);\r\n        // 将新增的节点添加到 Canvas 节点下面\r\n        this.node.addChild(newStar);\r\n        // 为星星设置一个随机位置\r\n        newStar.setPosition(this.getNewStarPosition());\r\n        // 在星星组件上暂存 Game 对象的引用\r\n        newStar.getComponent('Star').game = this;\r\n        this.starDuration = this.minStarDuration + Math.random() * (this.maxStarDuration - this.minStarDuration);\r\n        this.timer = 0;\r\n    },\r\n\r\n    getNewStarPosition: function () {\r\n        var randX = 0;\r\n        // 根据地平面位置和主角跳跃高度，随机得到一个星星的 y 坐标\r\n        var randY = this.groundY + Math.random() * this.player.getComponent('Player').jumpHeight + 50;\r\n        // 根据屏幕宽度，随机得到一个星星 x 坐标\r\n        var maxX = this.node.width/2;\r\n        randX = (Math.random() - 0.5) * 2 * maxX;\r\n        // 返回星星坐标\r\n        return cc.v2(randX, randY);\r\n    },\r\n    gainScore: function () {\r\n        this.score += 1;\r\n        // 更新 scoreDisplay Label 的文字\r\n        this.scoreDisplay.string = 'Score: ' + this.score;\r\n        // 播放得分音效\r\n        cc.audioEngine.playEffect(this.scoreAudio, false);\r\n    },\r\n    gameOver: function () {\r\n        this.player.stopAllActions(); //停止 player 节点的跳跃动作\r\n        cc.director.loadScene('game');\r\n    },\r\n\r\n    // LIFE-CYCLE CALLBACKS:\r\n\r\n    onLoad: function () {\r\n        // 获取地平面的 y 轴坐标\r\n        this.groundY = this.ground.y + this.ground.height/2;\r\n        //初始化定时器\r\n        this.timer = 0;\r\n        this.starDuration = 0;\r\n        // 生成一个新的星星\r\n        this.spawnNewStar();\r\n        //重置分数为0\r\n        this.score=0\r\n    },\r\n\r\n    start () {\r\n\r\n    },\r\n\r\n    update (dt) {\r\n        // 每帧更新计时器，超过限度还没有生成新的星星\r\n        // 就会调用游戏失败逻辑\r\n        if (this.timer > this.starDuration) {\r\n            this.gameOver();\r\n            return;\r\n        }\r\n        this.timer += dt;\r\n    },\r\n});\r\n"]}